{"version":3,"sources":["shodan/inspection.cljs"],"mappings":"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","names":["shodan.inspection/find-type","obj","cljs.core/map?","cljs.core/vector?","cljs.core/seq?","shodan.inspection/group-name","prefix","brace","clojure.string.join.cljs$core$IFn$_invoke$arity$2","cljs.core/flatten","js/shodan","js/shodan.inspection","js/shodan.inspection.inspect","method-table__4672__auto__","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","prefer-table__4673__auto__","method-cache__4674__auto__","cached-hierarchy__4675__auto__","hierarchy__4676__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","fexpr__26217","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","shodan.inspection/inspect","x","args","a-map","js/console","result__25975__auto__","seq__26218","cljs.core/seq","chunk__26219","count__26220","i__26221","vec__26238","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__26248","cljs.core/first","cljs.core/next","k","v","G__26241","G__26242","G__26253","G__26254","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","a-vec","seq__26257","chunk__26258","count__26259","i__26260","seq__26261","chunk__26262","count__26263","i__26264","or__4185__auto__"],"sourcesContent":["(ns shodan.inspection\n  (:require\n    [shodan.console :as console :include-macros true]\n    [clojure.string :as string]))\n\n(defn- find-type [obj]\n  (cond\n    (map? obj) :map\n    (vector? obj) :vector\n    (seq? obj) :seq\n    :else :default))\n\n(defn- group-name [prefix brace]\n  (string/join \" \" (flatten [prefix brace])))\n\n(defmulti inspect\n  \"Inspects a ClojureScript data structure by displaying it in the\n  browser's console. Collections are shown using log groups to\n  represent their structure.\"\n  (fn [x & args] (find-type x)))\n\n(defmethod inspect :map [a-map prefix]\n  (console/with-group (group-name prefix \"{\")\n    (doseq [[k v] a-map]\n      (inspect v (pr-str k)))\n    (console/log \"}\")))\n\n(defmethod inspect :vector [a-vec prefix]\n  (console/with-group (group-name prefix \"[\")\n    (doseq [obj a-vec]\n      (inspect obj))\n    (console/log \"]\")))\n\n(defmethod inspect :seq [a-vec prefix]\n  (console/with-group (group-name prefix \"(\")\n    (doseq [obj a-vec]\n      (inspect obj))\n    (console/log \")\")))\n\n(defmethod inspect :default\n  ([obj]\n   (console/log (pr-str obj)))\n  ([obj prefix]\n   (console/log (or prefix \"\") (pr-str obj))))\n"]}